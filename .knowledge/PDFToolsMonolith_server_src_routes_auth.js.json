{"is_source_file": true, "format": "JavaScript", "description": "This file defines authentication routes for a web application, including user registration, login, logout, and fetching current user info. It uses express router, handles user credential validation, JWT token generation, session management, and logging.", "external_files": ["../db/pool.js", "../services/logs.js", "../middleware/auth.js"], "external_methods": ["query", "addLog", "authRequired"], "published": ["router"], "classes": [], "methods": [{"name": "POST /register", "description": "Registers a new user with email and password, storing user in database and logging the event."}, {"name": "POST /login", "description": "Authenticates user credentials, creates session, generates JWT, and sets auth cookie."}, {"name": "POST /logout", "description": "Invalidates the current session token and clears the auth cookie."}, {"name": "GET /me", "description": "Retrieves profile information of currently authenticated user."}], "calls": ["query('SELECT id FROM \"User\" WHERE email=$1', [email])", "query('INSERT INTO \"User\"(email, password_hash) VALUES ($1,$2) RETURNING id, email, is_premium, created_at', [email, password_hash])", "addLog('info', ...)", "query('SELECT * FROM \"User\" WHERE email=$1', [email])", "bcrypt.compare(password, user.password_hash)", "query('INSERT INTO \"Session\"(user_id, session_token, expires_at) VALUES ($1,$2,$3)', [user.id, sessionToken, expiresAt.toDate()])", "query('UPDATE \"User\" SET last_login=NOW() WHERE id=$1', [user.id])", "jwt.sign({ uid: user.id, sid: sessionToken }, process.env.JWT_SECRET, { expiresIn: `${ttlHours}h` })", "query('DELETE FROM \"Session\" WHERE session_token=$1', [sid])", "query('SELECT id, email, is_premium, created_at, last_login FROM \"User\" WHERE id=$1', [uid])"], "search-terms": ["auth", "user registration", "JWT session management", "login", "logout", "express routes", "bcrypt", "dayjs", "UUID", "authorization middleware"], "state": 2, "file_id": 17, "knowledge_revision": 34, "git_revision": "", "ctags": [{"_type": "tag", "name": "authSchema", "path": "/home/kavia/workspace/code-generation/pdf-tools-12948-12989/PDFToolsMonolith/server/src/routes/auth.js", "pattern": "/^const authSchema = Joi.object({$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/pdf-tools-12948-12989/PDFToolsMonolith/server/src/routes/auth.js", "pattern": "/^export const router = express.Router();$/", "language": "JavaScript", "kind": "constant"}], "hash": "b5c4192f90c14df8576a41e7c7ae1818", "format-version": 4, "code-base-name": "PDFToolsMonolith", "filename": "PDFToolsMonolith/server/src/routes/auth.js", "revision_history": [{"34": ""}]}